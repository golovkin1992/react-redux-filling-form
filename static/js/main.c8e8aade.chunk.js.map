{"version":3,"sources":["utils/maskDate.js","components/Form/TextField/index.js","components/Form/TextField/TextField.jsx","constants/groupFields.js","components/Form/index.js","components/Form/Form.jsx","components/Blanc/index.js","components/Blanc/Blanc.jsx","components/App/App.jsx","components/App/index.js","components/App/AppContainer.jsx","actions/index.js","constants/ActionTypes.js","constants/ErrorsField.js","utils/validation.js","reducers/index.js","store.js","index.js"],"names":["maskDate","value","v","replace","slice","length","concat","TextField","getValue","e","target","_this","props","isDate","handleChange","_this$props","onChangeField","name","handleBlur","_this$props2","onValidateField","_this$props3","this","label","error","isDisabled","react_default","a","createElement","htmlFor","className","type","placeholder","id","onChange","onBlur","autoComplete","disabled","PureComponent","groupFields","title","fields","Form","handleSubmit","preventDefault","onSubmit","formData","isSubmit","onReset","map","group","classNames","key","field","Form_TextField","onClick","Blanc","_ref","isVisible","data","item","i","App","loadForm","validateField","changeField","hasErrors","clearForm","submitForm","isDisabledForm","isVisibleBlank","react","components_Form","components_Blanc","AppContainer","connect","state","Object","keys","every","some","payload","errors","trackNum","pattern","fio","address","passSeries","passNumber","passIssueDate","passIssuingAuthority","passUnitCode","_errors$name","trim","test","initialState","store","createStore","arguments","undefined","action","objectSpread","defineProperty","localStorage","getItem","JSON","parse","setItem","stringify","composeWithDevTools","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.c8e8aade.chunk.js","sourcesContent":["const DATE_SEPARATOR = '.';\r\nconst maskDate = (value) => {\r\n  const v = value.replace(/\\D/g, '').slice(0, 8);\r\n  if (v.length >= 5) {\r\n    return `${v.slice(0, 2)}${DATE_SEPARATOR}${v.slice(2, 4)}${DATE_SEPARATOR}${v.slice(4)}`;\r\n  }\r\n  if (v.length >= 3) {\r\n    return `${v.slice(0, 2)}${DATE_SEPARATOR}${v.slice(2)}`;\r\n  }\r\n  return v;\r\n};\r\nexport default maskDate;\r\n","import TextField from './TextField';\r\n\r\nexport default TextField;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './TextField.sass';\r\nimport maskDate from '../../../utils/maskDate';\r\n\r\nexport default class TextField extends PureComponent {\r\n  getValue = (e) => {\r\n    const { value } = e.target;\r\n    const { isDate } = this.props;\r\n\r\n    if (isDate) {\r\n      return maskDate(value);\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { onChangeField, name } = this.props;\r\n    onChangeField(name, this.getValue(e));\r\n  }\r\n\r\n  handleBlur = (e) => {\r\n    const { value } = e.target;\r\n    const { onValidateField, name } = this.props;\r\n    onValidateField(name, value);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      label,\r\n      value,\r\n      error,\r\n      name,\r\n      isDisabled,\r\n    } = this.props;\r\n    return (\r\n      <label htmlFor={name} className=\"field\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder={'\\u00A0'}\r\n          className={`field__text-block ${error === '' ? 'valid_input' : 'invalid_input'}`}\r\n          id={name}\r\n          value={value}\r\n          onChange={this.handleChange}\r\n          onBlur={this.handleBlur}\r\n          autoComplete=\"off\"\r\n          disabled={isDisabled}\r\n        />\r\n        <span className={`field__label ${error === '' ? 'valid' : 'invalid'}`}>{label}</span>\r\n        <p className=\"field__error\">{error}</p>\r\n      </label>\r\n    );\r\n  }\r\n}\r\nTextField.propTypes = {\r\n  onChangeField: PropTypes.func.isRequired,\r\n  onValidateField: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  error: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  isDisabled: PropTypes.bool.isRequired,\r\n  isDate: PropTypes.bool,\r\n};\r\n","const groupFields = [\r\n  {\r\n    title: 'Параметры отправления',\r\n    fields: [\r\n      {\r\n        title: 'Трек-номер*',\r\n        name: 'trackNum',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: 'Информация о получателе',\r\n    fields: [\r\n      {\r\n        title: 'ФИО*',\r\n        name: 'fio',\r\n      },\r\n      {\r\n        title: 'Адрес*',\r\n        name: 'address',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: 'Паспортные данные получателя',\r\n    className: 'group_pass',\r\n    fields: [\r\n      {\r\n        title: 'Серия паспорта*',\r\n        name: 'passSeries',\r\n      },\r\n      {\r\n        title: 'Номер паспорта*',\r\n        name: 'passNumber',\r\n      },\r\n      {\r\n        title: 'Дата выдачи*',\r\n        name: 'passIssueDate',\r\n        isDate: true,\r\n      },\r\n      {\r\n        title: 'Кем выдан*',\r\n        name: 'passIssuingAuthority',\r\n\r\n      },\r\n      {\r\n        title: 'Код подразделения*',\r\n        name: 'passUnitCode',\r\n\r\n      },\r\n    ],\r\n  },\r\n];\r\nexport default groupFields;\r\n","import Form from './Form';\r\n\r\nexport default Form;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport TextField from './TextField';\r\nimport './Form.sass';\r\nimport groupFields from '../../constants/groupFields';\r\n\r\nexport default class Form extends PureComponent {\r\n handleSubmit = (e) => {\r\n   e.preventDefault();\r\n   const { onSubmit } = this.props;\r\n   onSubmit();\r\n }\r\n\r\n render() {\r\n   const {\r\n     formData,\r\n     onValidateField,\r\n     onChangeField,\r\n     isSubmit,\r\n     isDisabled,\r\n     onReset,\r\n   } = this.props;\r\n   return (\r\n     <form\r\n       onSubmit={this.handleSubmit}\r\n     >\r\n       <div className=\"container\">\r\n         {groupFields.map(group => (\r\n           <div\r\n             className={classNames('group', group.className)}\r\n             key={group.title}\r\n           >\r\n             <p className=\"group__label\">{group.title}</p>\r\n             {group.fields.map(field => (\r\n               <TextField\r\n                 key={field.name}\r\n                 name={field.name}\r\n                 label={field.title}\r\n                 value={formData[field.name].value}\r\n                 error={formData[field.name].error}\r\n                 onValidateField={onValidateField}\r\n                 onChangeField={onChangeField}\r\n                 isDisabled={isDisabled}\r\n                 isDate={field.isDate}\r\n               />\r\n             ))}\r\n           </div>\r\n         ))}\r\n         <button\r\n           className=\"btn btn_run\"\r\n           type=\"submit\"\r\n           disabled={isSubmit}\r\n         >\r\n      Сформировать\r\n         </button>\r\n         <button\r\n           className=\"btn btn_reset\"\r\n           type=\"button\"\r\n           onClick={onReset}\r\n         >\r\n      Очистить\r\n         </button>\r\n       </div>\r\n     </form>\r\n   );\r\n }\r\n}\r\nForm.propTypes = {\r\n  onChangeField: PropTypes.func.isRequired,\r\n  onValidateField: PropTypes.func.isRequired,\r\n  formData: PropTypes.objectOf(PropTypes.object).isRequired,\r\n  isSubmit: PropTypes.bool.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n  onReset: PropTypes.func.isRequired,\r\n  isDisabled: PropTypes.bool.isRequired,\r\n};\r\n","import Blanc from './Blanc';\r\n\r\nexport default Blanc;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport './Blanc.sass';\r\nimport groupFields from '../../constants/groupFields';\r\n\r\nconst Blanc = ({ isVisible, data }) => (\r\n  isVisible\r\n    ? (\r\n      <div className=\"container-blank\">\r\n        {groupFields.map(item => item.fields.map(\r\n          i => <p className=\"container-blank__label\">{i.title}: {data[i.name].value}</p>,\r\n        ))}\r\n      </div>\r\n\r\n    ) : (\r\n      <p className=\"hint\">Заполните форму!</p>\r\n    )\r\n);\r\nBlanc.propTypes = {\r\n  data: PropTypes.objectOf(PropTypes.object).isRequired,\r\n  isVisible: PropTypes.bool.isRequired,\r\n};\r\nexport default Blanc;\r\n","import PropTypes from 'prop-types';\r\nimport React, { PureComponent, Fragment } from 'react';\r\nimport Form from '../Form';\r\nimport Blanc from '../Blanc';\r\n\r\nexport default class App extends PureComponent {\r\n  componentDidMount() {\r\n    const { loadForm } = this.props;\r\n    loadForm();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      formData,\r\n      validateField,\r\n      changeField,\r\n      hasErrors,\r\n      clearForm,\r\n      submitForm,\r\n      isDisabledForm,\r\n      isVisibleBlank,\r\n    } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Form\r\n          formData={formData}\r\n          onChangeField={changeField}\r\n          onValidateField={validateField}\r\n          onReset={clearForm}\r\n          isSubmit={hasErrors}\r\n          isDisabled={isDisabledForm}\r\n          onSubmit={submitForm}\r\n        />\r\n        <Blanc\r\n          data={formData}\r\n          isVisible={isVisibleBlank}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  formData: PropTypes.objectOf(PropTypes.object).isRequired,\r\n  changeField: PropTypes.func.isRequired,\r\n  validateField: PropTypes.func.isRequired,\r\n  hasErrors: PropTypes.bool.isRequired,\r\n  loadForm: PropTypes.func.isRequired,\r\n  submitForm: PropTypes.func.isRequired,\r\n  clearForm: PropTypes.func.isRequired,\r\n  isVisibleBlank: PropTypes.bool.isRequired,\r\n  isDisabledForm: PropTypes.bool.isRequired,\r\n};\r\n","import AppContainer from './AppContainer';\r\n\r\nexport default AppContainer;\r\n","import { connect } from 'react-redux';\r\nimport App from './App';\r\nimport {\r\n  loadFormAction,\r\n  clearFormAction,\r\n  changeFieldAction,\r\n  validateFieldAction,\r\n  submitFormAction,\r\n} from '../../actions';\r\n\r\nconst hasErrors = fields => !(Object.keys(fields).every((item => fields[item].error === ''))\r\n  && !Object.keys(fields).some(item => fields[item].value === ''));\r\n\r\nconst mapStateToProps = state => ({\r\n  formData: state.fields,\r\n  hasErrors: hasErrors(state.fields),\r\n  isVisibleBlank: state.isVisibleBlank,\r\n  isDisabledForm: state.isDisabledForm,\r\n});\r\n\r\nexport default\r\nconnect(mapStateToProps,\r\n  {\r\n    changeField: changeFieldAction,\r\n    validateField: validateFieldAction,\r\n    loadForm: loadFormAction,\r\n    clearForm: clearFormAction,\r\n    submitForm: submitFormAction,\r\n  })(App);\r\n","import {\r\n  VALIDATE_FIELD,\r\n  CHANGE_FIELD,\r\n  LOAD_FORM,\r\n  CLEAR_FORM,\r\n  SUBMIT_FORM,\r\n} from '../constants/ActionTypes';\r\n\r\nexport const changeFieldAction = (name, value) => (\r\n  { type: CHANGE_FIELD, payload: { name, value } });\r\nexport const validateFieldAction = (name, value) => (\r\n  { type: VALIDATE_FIELD, payload: { name, value } });\r\nexport const loadFormAction = () => ({ type: LOAD_FORM });\r\nexport const clearFormAction = () => ({ type: CLEAR_FORM });\r\nexport const submitFormAction = () => ({ type: SUBMIT_FORM });\r\n","export const CHANGE_FIELD = 'CHANGE_FIELD';\r\nexport const VALIDATE_FIELD = 'VALIDATE_FIELD';\r\nexport const LOAD_FORM = 'LOAD_FORM';\r\nexport const CLEAR_FORM = 'CLEAR_FORM';\r\nexport const SUBMIT_FORM = 'SUBMIT_FORM';\r\n","const errors = {\r\n  trackNum: {\r\n    pattern: /^[A-Z]{2}\\d{9}[A-Z]{2}$/,\r\n    error: 'Введите трек-номер в формате RU123456789CN',\r\n  },\r\n  fio: {\r\n    pattern: /^[А-ЯЁ][а-яё]+ [А-ЯЁ][а-яё]+ [А-ЯЁ][а-яё]+$/,\r\n    error: 'Введите Имя Фамилия Отчество через пробел с заглавной буквы',\r\n  },\r\n  address: {\r\n    pattern: /^[?!,.а-яА-ЯёЁ0-9\\s]{1,100}$/,\r\n    error: 'Только русские буквы и цифры! Максимально допустимая длина 100 символов!',\r\n  },\r\n  passSeries: {\r\n    pattern: /^\\d{4}$/,\r\n    error: 'Серия паспорта состоит из 4 цифр!',\r\n  },\r\n  passNumber: {\r\n    pattern: /^\\d{6}$/,\r\n    error: 'Номер паспорта состоит из 6 цифр!',\r\n  },\r\n  passIssueDate: {\r\n    pattern: /(0[1-9]|[12][0-9]|3[01])[- .](0[1-9]|1[012])[- .](19|20)\\d\\d/,\r\n    error: 'Введите дату в формате дд.мм.гггг',\r\n  },\r\n  passIssuingAuthority: {\r\n    pattern: /^[?!,.а-яА-ЯёЁ0-9\\s]{1,100}$/,\r\n    error: 'Только русские буквы и цифры!',\r\n  },\r\n  passUnitCode: {\r\n    pattern: /^\\d{3}-\\d{3}$/,\r\n    error: 'Введите код подразделения в формате 111-222',\r\n  },\r\n};\r\nexport default errors;\r\n","import errors from '../constants/ErrorsField';\r\n\r\nexport const isEmpty = str => str.trim() === '';\r\nexport const validateField = (value, name) => {\r\n  let errorField = '';\r\n  const { pattern, error } = errors[name];\r\n  if (isEmpty(value)) {\r\n    errorField = 'Обязательное поле!';\r\n    return errorField;\r\n  } if (pattern.test(value)) {\r\n    errorField = '';\r\n  } else errorField = error;\r\n  return errorField;\r\n};\r\n","import { validateField } from '../utils/validation';\r\n\r\nconst initialState = {\r\n\r\n  fields: {\r\n    trackNum: {\r\n      value: '',\r\n      error: '',\r\n    },\r\n    fio: {\r\n      value: '',\r\n      error: '',\r\n    },\r\n    address: {\r\n      value: '',\r\n      error: '',\r\n    },\r\n    passSeries: {\r\n      value: '',\r\n      error: '',\r\n    },\r\n    passNumber: {\r\n      value: '',\r\n      error: '',\r\n    },\r\n    passIssueDate: {\r\n      value: '',\r\n      error: '',\r\n    },\r\n    passIssuingAuthority: {\r\n      value: '',\r\n      error: '',\r\n    },\r\n    passUnitCode: {\r\n      value: '',\r\n      error: '',\r\n    },\r\n  },\r\n\r\n  isVisibleBlank: false,\r\n  isDisabledForm: false,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case 'VALIDATE_FIELD': {\r\n      const { name, value } = payload;\r\n      const { fields } = state;\r\n      return { ...state, fields: { ...fields, [name]: { value, error: validateField(value, name) } } };\r\n    }\r\n    case 'CHANGE_FIELD': {\r\n      const { name, value } = payload;\r\n      const { fields } = state;\r\n      return { ...state, fields: { ...fields, [name]: { value, error: '' } } };\r\n    }\r\n    case 'LOAD_FORM': {\r\n      const data = localStorage.getItem('blank');\r\n      if (!data) {\r\n        return state;\r\n      }\r\n      return JSON.parse(data);\r\n    }\r\n    case 'CLEAR_FORM': {\r\n      localStorage.setItem('blank', JSON.stringify(initialState));\r\n      return initialState;\r\n    }\r\n    case 'SUBMIT_FORM': {\r\n      localStorage.setItem('blank', JSON.stringify(state));\r\n      return { ...state, isDisabledForm: true, isVisibleBlank: true };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(reducers, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport AppContainer from './components/App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <AppContainer />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}